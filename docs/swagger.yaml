basePath: /api/v1
definitions:
  credentials.ConfluenceServerUser:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  credentials.ConfluenceUserCheck:
    properties:
      Cause:
        type: string
      password:
        type: string
      result:
        type: boolean
      username:
        type: string
    type: object
  credentials.Credentials:
    properties:
      confluenceServerUsers:
        items:
          $ref: '#/definitions/credentials.ConfluenceServerUser'
        type: array
      grafanaReadUsers:
        items:
          $ref: '#/definitions/credentials.GrafanaReadUser'
        type: array
    type: object
  credentials.CredentialsCheck:
    properties:
      confluenceServerUserCheck:
        items:
          $ref: '#/definitions/credentials.ConfluenceUserCheck'
        type: array
      grafanaReadUserCheck:
        items:
          $ref: '#/definitions/credentials.GrafanaReadUserCheck'
        type: array
    type: object
  credentials.GrafanaReadUser:
    properties:
      apikey:
        type: string
    type: object
  credentials.GrafanaReadUserCheck:
    properties:
      Cause:
        type: string
      apikey:
        type: string
      result:
        type: boolean
    type: object
  health.Ping:
    properties:
      response:
        example: hello
        type: string
    type: object
  view.AccountViewV1:
    properties:
      Alias:
        description: Optional arg. Won't be returned if missing.
        type: string
      Email:
        type: string
    type: object
  view.CredentialsView1:
    properties:
      GrafanaUsers:
        additionalProperties:
          $ref: '#/definitions/view.GrafanaUser'
        type: object
    type: object
  view.GrafanaUser:
    properties:
      Description:
        type: string
    type: object
  view.MetadataView1:
    properties:
      CreateTimeUTC:
        type: string
      LastUpdate:
        type: string
      PrimaryKey:
        type: string
      Version:
        type: string
    type: object
  view.RecordViewV1:
    properties:
      Account:
        $ref: '#/definitions/view.AccountViewV1'
        type: object
      Credentials:
        $ref: '#/definitions/view.CredentialsView1'
        type: object
      Metadata:
        $ref: '#/definitions/view.MetadataView1'
        type: object
    type: object
info:
  contact: {}
  description: Takes and updates snapshots from a graph service to a document store
  license:
    name: MIT License
  title: Graph Snapper API
  version: "1.0"
paths:
  /account/{id}:
    get:
      description: Non-authenticated endpoint fetches account at specified key
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.RecordViewV1'
      summary: Get account record
      tags:
      - account
    put:
      description: Non-authenticated endpoint creates an empty record at the specified key. Overwrites any record that already exists
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Create account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/view.AccountViewV1'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Create account record
      tags:
      - account
  /credentials:
    post:
      description: Non-authenticated endpoint Check credentials for validity. Returns an array of user objects with check result
      parameters:
      - description: Check credentials
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/credentials.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/credentials.CredentialsCheck'
      summary: Check credentials for validaty
      tags:
      - account
  /health/hello:
    get:
      description: Non-authenticated endpoint that returns 200 with hello message. Used to validate that the service is responsive.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.Ping'
      summary: Hello sanity endpoint
      tags:
      - health
swagger: "2.0"
